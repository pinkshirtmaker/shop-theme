{% liquid
  assign namespace = 'collection-feature-' | append: section.id
  assign has_primary_button = false
  assign has_secondary_button = false

  unless section.settings.button_label == empty or section.settings.button_url == null
    assign has_primary_button = true
  endunless

  unless section.settings.secondary_button_label == empty or section.settings.secondary_button_url == null
    assign has_secondary_button = true
  endunless
%}

{{ 'collection-feature.css' | asset_url | stylesheet_tag }}

<div
  class="collection-feature"
  {% unless section.settings.background_color == blank %}
    style="--background-color: {{ section.settings.background_color }};"
  {% endunless %}
>
  <div class="container">
    <div class="grid">
      <div class="col xs12 l4">
        {% unless section.settings.subheading == empty
          and section.settings.heading == empty
          and section.settings.content == empty
          and has_primary_button == false
          and has_secondary_button == false
        %}
          <div class="collection-feature__content">
            {% unless section.settings.subheading == empty and section.settings.heading == empty %}
              <div class="collection-feature__header">
                {% unless section.settings.subheading == empty %}
                  <p class="text-subheading">{{ section.settings.subheading }}</p>
                {% endunless %}

                {% unless section.settings.heading == empty %}
                  <p class="text-h2 no-margin">{{ section.settings.heading }}</p>
                {% endunless %}
              </div>
            {% endunless %}

            {% unless section.settings.content == empty %}
              <p class="text-h4 no-margin">{{ section.settings.content }}</p>
            {% endunless %}

            {% if has_primary_button or has_secondary_button %}
              <div class="collection-feature__buttons">
                {% if has_primary_button %}
                  <a
                    class="button button--narrow button--small button--outlined"
                    href="{{ section.settings.button_url }}"
                  >
                    {{- section.settings.button_label -}}
                  </a>
                {% endif %}

                {% if has_secondary_button %}
                  <a class="collection-feature__label text-button" href="{{ section.settings.secondary_button_url }}">
                    {{- section.settings.secondary_button_label -}}
                    {% render 'growing-arrow', absolute: true %}
                  </a>
                {% endif %}
              </div>
            {% endif %}
          </div>
        {% endunless %}
      </div>

      <div class="col xs12 l8">
        {% unless section.blocks.size == 0 %}
          <div class="collection-feature__navigation">
            <button
              id="{{ namespace }}-prev"
              class="collection-feature__arrow button-reset"
              type="button"
              title="{{ 'accessibility.carousel.previous' | t }}"
            >
              {% render 'icon-direction', icon: 'arrow-left' %}
            </button>

            <button
              id="{{ namespace }}-next"
              class="collection-feature__arrow button-reset"
              type="button"
              title="{{ 'accessibility.carousel.next' | t }}"
            >
              {% render 'icon-direction', icon: 'arrow-right' %}
            </button>
          </div>

          <swiper-container
            class="collection-feature__slider"
            slides-per-view="auto"
            space-between="8"
            slides-offset-before="16"
            slides-offset-after="16"
            navigation-prev-el="#{{ namespace }}-prev"
            navigation-next-el="#{{ namespace }}-next"
            scrollbar-el="#{{ namespace }}-scrollbar"
            scrollbar-draggable
            breakpoints='
              {
                "1024": {
                  "spaceBetween": 32,
                  "slidesOffsetBefore": 0,
                  "slidesOffsetAfter": 32
                }
              }
            '
          >
            {% for block in section.blocks %}
              {% liquid
                assign image_width = block.settings.image_width | divided_by: 100.0 | times: 900
                assign image_width_2x = image_width | times: 2
                assign block_tag = 'div'

                if block.settings.url
                  assign block_tag = 'a'
                endif
              %}

              <swiper-slide style="width: {{ block.settings.image_width }}%;">
                <{{ block_tag }}
                  class="collection-feature__block"
                  {% if block.settings.url %}
                    href="{{ block.settings.url }}"
                  {% endif %}
                >
                  {% unless block.settings.image == null %}
                    {{
                      block.settings.image
                      | image_url: width: image_width_2x
                      | image_tag: class: 'collection-feature__image image'
                    }}
                  {% endunless %}

                  {% unless block.settings.label == empty %}
                    <p class="collection-feature__label text-button">
                      {{ block.settings.label }}
                      {% render 'growing-arrow' %}
                    </p>
                  {% endunless %}
                </{{ block_tag }}>
              </swiper-slide>
            {% endfor %}
          </swiper-container>

          <div id="{{ namespace }}-scrollbar" class="collection-feature__scrollbar"></div>
        {% endunless %}
      </div>
    </div>
  </div>
</div>

{% schema %}
{
  "name": "t:sections.collection-feature.name",
  "settings": [
    {
      "type": "text",
      "id": "subheading",
      "label": "t:presets.settings.subheading.label",
      "default": "Subheading"
    },
    {
      "type": "text",
      "id": "heading",
      "label": "t:presets.settings.heading.label",
      "default": "Heading text"
    },
    {
      "type": "inline_richtext",
      "id": "content",
      "label": "t:presets.settings.content.label",
      "default": "Raepe dolor escia non non rudamer simus natibe ribus ilibus nonse sedolor escia non rudamer simus natibe ribus ilibus nonsenses."
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "t:presets.settings.background_color.label"
    },
    {
      "type": "header",
      "content": "t:sections.collection-feature.settings.header__1.content"
    },
    {
      "type": "text",
      "id": "button_label",
      "label": "t:presets.settings.label.label",
      "default": "Button label"
    },
    {
      "type": "url",
      "id": "button_url",
      "label": "t:presets.settings.url.label",
      "default": "/collections/all"
    },
    {
      "type": "header",
      "content": "t:sections.collection-feature.settings.header__2.content"
    },
    {
      "type": "text",
      "id": "secondary_button_label",
      "label": "t:presets.settings.label.label",
      "default": "Secondary button"
    },
    {
      "type": "url",
      "id": "secondary_button_url",
      "label": "t:presets.settings.url.label",
      "default": "/collections/all"
    }
  ],
  "blocks": [
    {
      "type": "block",
      "name": "t:presets.blocks.block.name",
      "settings": [
        {
          "type": "image_picker",
          "id": "image",
          "label": "t:presets.settings.image.label",
          "info": "t:sections.collection-feature.blocks.block.settings.image.info"
        },
        {
          "type": "range",
          "id": "image_width",
          "label": "t:sections.collection-feature.blocks.block.settings.image_width.label",
          "min": 0,
          "max": 100,
          "unit": "%",
          "default": 50
        },
        {
          "type": "text",
          "id": "label",
          "label": "t:presets.settings.label.label",
          "default": "Image label"
        },
        {
          "type": "url",
          "id": "url",
          "label": "t:presets.settings.url.label",
          "default": "/collections/all"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "t:sections.collection-feature.name"
    }
  ]
}
{% endschema %}
